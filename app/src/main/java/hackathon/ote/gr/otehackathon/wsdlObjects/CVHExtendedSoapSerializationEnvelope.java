package hackathon.ote.gr.otehackathon.wsdlObjects;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.1
//
// Created by Quasar Development 
//
//---------------------------------------------------



import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.*;
import org.kxml2.io.KXmlParser;
import org.kxml2.kdom.Element;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;
import org.xmlpull.v1.XmlSerializer;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Vector;
import java.io.StringReader;
import java.io.StringWriter;

//If you have a compilation error here then you have to add a reference to ExKsoap2.jar to your project (you can find it in Libs folder in the generated zip file)
public class CVHExtendedSoapSerializationEnvelope extends com.easywsdl.exksoap2.serialization.ExSoapSerializationEnvelope {
    static HashMap< java.lang.String,java.lang.Class> classNames = new HashMap< java.lang.String, java.lang.Class>();
    
    static {
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topologySection",CVHtopologySection.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topologyComponent",CVHtopologyComponent.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topologyAddition",CVHtopologyAddition.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topologyComponentMenuItem",CVHtopologyComponentMenuItem.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topologyComponentState",CVHtopologyComponentState.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^DiagnosticServiceFault",CVHDiagnosticServiceFault.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^TopologyNotFoundFault",CVHTopologyNotFoundFault.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^resumeCase",CVHresumeCase.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^userData_extendedData_entry",CVHuserData_extendedData_entry.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^userData",CVHuserData.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^locale",CVHlocale.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^startParameter",CVHstartParameter.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^sessionState",CVHsessionState.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^processState",CVHprocessState.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^closeCase",CVHcloseCase.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^metaProperty",CVHmetaProperty.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^form",CVHform.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^questionForm",CVHquestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^validator",CVHvalidator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^regExValidator",CVHregExValidator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^minMaxValidator",CVHminMaxValidator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^expressionValidator",CVHexpressionValidator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^singleChoiceQuestionForm",CVHsingleChoiceQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^choiceQuestionForm",CVHchoiceQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^option",CVHoption.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^multipleChoiceQuestionForm",CVHmultipleChoiceQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^textQuestionForm",CVHtextQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^numberQuestionForm",CVHnumberQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dateQuestionForm",CVHdateQuestionForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^messageForm",CVHmessageForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dynamicForm",CVHdynamicForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^formElement",CVHformElement.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^layoutConstraints",CVHlayoutConstraints.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^gridLayoutConstraints",CVHgridLayoutConstraints.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^horizontalLayoutConstraints",CVHhorizontalLayoutConstraints.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^size",CVHsize.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^verticalLayoutConstraints",CVHverticalLayoutConstraints.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^label",CVHlabel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^richText",CVHrichText.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^indicator",CVHindicator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^iterator",CVHiterator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^text",CVHtext.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^abstractContainer",CVHabstractContainer.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^layout",CVHlayout.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^gridLayout",CVHgridLayout.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^horizontalLayout",CVHhorizontalLayout.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^verticalLayout",CVHverticalLayout.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^container",CVHcontainer.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^abstractPanel",CVHabstractPanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^togglePanel",CVHtogglePanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^panel",CVHpanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^separator",CVHseparator.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^link",CVHlink.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^abstractMedia",CVHabstractMedia.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^image",CVHimage.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^media",CVHmedia.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^popupPanel",CVHpopupPanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^table",CVHtable.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^tableColumn",CVHtableColumn.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^tableCell",CVHtableCell.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^abstractTabPanel",CVHabstractTabPanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^tab",CVHtab.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^accordionPanel",CVHaccordionPanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^tabPanel",CVHtabPanel.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^grid",CVHgrid.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^gridCell",CVHgridCell.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dataGrid",CVHdataGrid.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dataGridColumn",CVHdataGridColumn.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dataGridHeaderRow",CVHdataGridHeaderRow.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dataGridHeaderCell",CVHdataGridHeaderCell.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^event",CVHevent.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^signalEvent",CVHsignalEvent.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^submitForms",CVHsubmitForms.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^formSubmission",CVHformSubmission.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^inputValue",CVHinputValue.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^ValidationFault",CVHValidationFault.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^ValidationErrors",CVHValidationErrors.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^validationError",CVHvalidationError.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^abstractMenuItem",CVHabstractMenuItem.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^processItem",CVHprocessItem.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^processCategory",CVHprocessCategory.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^appForm",CVHappForm.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^topology",CVHtopology.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^userData_extendedData",CVHuserData_extendedData.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^formPage",CVHformPage.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^tableRow",CVHtableRow.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^gridRow",CVHgridRow.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^dataGridRow",CVHdataGridRow.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^events",CVHevents.class);
        classNames.put("http://diagnostic.ws.solvatio.iisy.com/^^processMenuForm",CVHprocessMenuForm.class);
    } 


    protected static final int QNAME_NAMESPACE = 0;
    private static final String TYPE_LABEL = "type";

    public CVHExtendedSoapSerializationEnvelope() {
        this(SoapEnvelope.VER11);
    }

    public CVHExtendedSoapSerializationEnvelope(int soapVersion) {
        super(soapVersion);
        implicitTypes = true;
        setAddAdornments(false);
        new CVHMarshalGuid().register(this);
        new MarshalFloat().register(this);
    }

    

    @Override
    protected void writeProperty(XmlSerializer writer, java.lang.Object obj, PropertyInfo type) throws IOException {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if (obj == null || obj== SoapPrimitive.NullNilElement) {
            writer.attribute(xsi, version >= VER12 ? NIL_LABEL : NULL_LABEL, "true");
            return;
        }
        if(writeReferenceObject(writer,obj))
        {
            return;
        }
        java.lang.Object[] qName = getInfo(null, obj);
        if (!type.multiRef && qName[2] == null )
        {

            if (!implicitTypes || (obj.getClass() != type.type && !(obj instanceof Vector ) && type.type!=java.lang.String.class  )) {
                java.lang.String xmlName=CVHHelper.getKeyByValue(classNames,obj.getClass());
                if(xmlName!=null) {
                    java.lang.String[] parts = xmlName.split("\\^\\^");
                    java.lang.String prefix = writer.getPrefix(parts[0], true);
                    writer.attribute(xsi, TYPE_LABEL, prefix + ":" + parts[1]);
                }
                else
                {
                    if(type.type instanceof String) {
                        java.lang.String xsdPrefix = writer.getPrefix(xsd, true);
                        java.lang.String myType = (java.lang.String) type.type;
                        java.lang.String[] parts = myType.split("\\^\\^");
                        if (parts.length == 2) {
                            xsdPrefix = writer.getPrefix(parts[0], true);
                            myType = parts[1];
                        }

                        writer.attribute(xsi, TYPE_LABEL, xsdPrefix + ":" + myType);
                    }
                    else
                    {
                        java.lang.String prefix = writer.getPrefix(type.namespace, true);
                        writer.attribute(xsi, TYPE_LABEL, prefix + ":" + obj.getClass().getSimpleName());
                    }

                }
            }
            //super.writeProperty(writer,obj,type);

            //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
            //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
            writeElement(writer, obj, type, qName[QNAME_MARSHAL]);
        }
        else {
            super.writeProperty(writer, obj, type);
        }
    }
    public SoapObject GetExceptionDetail(Element detailElement,java.lang.String exceptionElementNS,java.lang.String exceptionElementName)
    {
        int index=detailElement.indexOf(exceptionElementNS,exceptionElementName,0);
        if(index>-1)
        {
            Element errorElement=detailElement.getElement(index);
            return GetSoapObject(errorElement);
        }
        return null;
    }

    public SoapObject GetSoapObject(Element detailElement) {
        try{
            XmlSerializer xmlSerializer = XmlPullParserFactory.newInstance().newSerializer();
            StringWriter writer = new StringWriter();
            xmlSerializer.setOutput(writer);
            detailElement.write(xmlSerializer);
            xmlSerializer.flush();

            XmlPullParser xpp = new KXmlParser();
            xpp.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);

            xpp.setInput(new StringReader(writer.toString()));
            xpp.nextTag();
            SoapObject soapObj = new SoapObject(detailElement.getNamespace(),detailElement.getName());
            readSerializable(xpp,soapObj);
            return soapObj;
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
    }

    public java.lang.Object GetHeader(Element detailElement) {
        if(detailElement.getChildCount()>0 && detailElement.getText(0)!=null)
        {
            SoapPrimitive primitive = new SoapPrimitive(detailElement.getNamespace(),detailElement.getName(),detailElement.getText(0));
            return  primitive;
        }
    
        return GetSoapObject(detailElement);
    }

    private Object createObject(Object soap, Class cl) throws InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException {
        Object obj=cl.newInstance();
        Method ctor = obj.getClass().getMethod("loadFromSoap",Object.class,CVHExtendedSoapSerializationEnvelope.class);
        ctor.invoke(obj,soap,this);
        return obj;
    }

    public java.lang.Object get(java.lang.Object soap,java.lang.Class cl,boolean typeFromClass)
    {
        if(soap==null)
        {
            return null;
        }
        try
        {
            if(typeFromClass)
            {
                return createObject(soap, cl);
            }
            java.lang.Object refAttr=getReference(soap);
            if (refAttr != null)
            {
                return refAttr;
            }
            else
            {
                if(soap instanceof SoapObject)
                {
                    if(cl ==SoapObject.class)
                    {
                        return soap;
                    }
                    java.lang.String key=String.format("%s^^%s",((SoapObject)soap).getNamespace(),((SoapObject)soap).getName());
                    if(classNames.containsKey(key))
                    {
                        cl=classNames.get(key);
                    }
                }
                return createObject(soap, cl);
            }
        }
        catch (java.lang.Exception ex)
        {
            ex.printStackTrace();
            return null;
        }
    }

    public java.lang.Object getSpecificType(java.lang.Object obj)
    {
        if(obj==null)
        {
            return null;
        }
        if(obj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)obj;
            java.lang.String key=soapObject.getNamespace()+"^^"+soapObject.getName();
            if(classNames.containsKey(key))
            {
                java.lang.Class cl=classNames.get(key);
                try
                {
                    return createObject(soapObject, cl);
                } 
                catch (java.lang.Exception e)
                {
                    e.printStackTrace();
                }
            }
        }

        return obj;
    }

    public static java.lang.Object getXSDType(java.lang.Object param)
    {
        if(param==null)
        {
            return null;
        }
        java.lang.Class obj=param.getClass();
        if(obj.equals(java.lang.String.class))
        {
            return "string";
        }
        if(obj.equals(int.class) || obj.equals(java.lang.Integer.class))
        {
            return "int";
        }
        if(obj.equals(float.class) || obj.equals(java.lang.Float.class))
        {
            return "float";
        }
        if(obj.equals(double.class) || obj.equals(java.lang.Double.class))
        {
            return "double";
        }
        if(obj.equals(java.math.BigDecimal.class))
        {
            return "decimal";
        }
        if(obj.equals(short.class) || obj.equals(java.lang.Short.class))
        {
            return "short";
        }
        if(obj.equals(long.class) || obj.equals(java.lang.Long.class))
        {
            return "long";
        }
        if(obj.equals(boolean.class) || obj.equals(java.lang.Boolean.class))
        {
            return "boolean";
        }
        java.lang.String xmlName=CVHHelper.getKeyByValue(classNames,obj);
        if(xmlName==null)
        {
            return obj;
        }
        return xmlName;
    }
} 

